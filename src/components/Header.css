/* CHANGES (ENGLISH):
   - Unified background of search input and dropdown to var(--color-bg).
   - Input is fully rounded by default; when dropdown exists it shows only top-rounded corners to visually attach to dropdown (using :has()).
   - Dropdown width matches the input width only (not input+button) by using a CSS variable --search-btn-w set on .header__search-wrapper and calculating width: calc(100% - var(--search-btn-w)).
   - Fixed mobile selector so only the header's main search bar is hidden on small screens (.header__container > .header__search-bar), preserving the mobile overlay search inside .header__mobile-menu.
*/

/* ===== Desktop Styles ===== */
.header__container {
    background-color: var(--color-primary);
    padding: 15px 30px;
    display: flex;
    justify-content: space-between; 
    align-items: center;
    color: var(--color-bg);
    font-family: var(--font-main);
    flex-wrap: nowrap;
    position: fixed; 
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1000;
}

.header__logo {
    display: flex;
    align-items: center; 
    gap: 10px;
    flex-shrink: 0;
}

.header__logo-icon {
    width: 40px;
    height: 40px;
}

.header__logo-text {
    font-size: 1.5rem;
    font-weight: 700;
}

/* OUTER search bar container inside the header (original placement) */
.header__container > .header__search-bar {
    display: flex;
    align-items: center; 
    gap: 6px;
    width: 450px; 
    margin: 0 20px 0 60px ; 
    flex-shrink: 0; 
}

/* Scope for the search wrapper produced by Search.jsx (keeps dropdown positioning reliable)
   Also define --search-btn-w here so dropdown can match only the input width.
*/
.header__search-wrapper {
    position: relative;
    width: 100%;
    --search-btn-w: 92px; /* default button width used to calculate dropdown width (adjust if needed) */
}

/* INNER row (input + button) inside the Search component */
.header__search-wrapper > .header__search-bar {
    display: flex;
    align-items: center;
    gap: 6px;
    width: 100%;
    margin: 0; /* ensure no inherited margin from outer container */
}

/* Input: fully rounded by default; when dropdown exists, show top corners only */
.header__search-input {
    padding: 6px 10px;
    border-radius: 6px; /* default full rounding */
    border: 1px solid var(--color-border);
    outline: none;
    width: 100%; 
    max-width: 100%;
    background: var(--color-bg); /* unified with dropdown */
    color: var(--color-text);
    transition: border-radius 120ms linear;
}

/* When dropdown is present, make input top-rounded only so it visually joins dropdown */
.header__search-wrapper:has(.search-dropdown) .header__search-input {
    border-radius: 6px 6px 0 0;
}

.header__search-input::placeholder {
    color: var(--color-text-muted);
}

/* Button next to input: keep it neat next to squared bottom of input
   (this assumes your Button component renders a .btn class; if it doesn't, change selector accordingly)
   We set a fixed width (via --search-btn-w) so dropdown can calculate input width.
*/
.header__search-wrapper > .header__search-bar .btn {
    border-radius: 6px;
    white-space: nowrap;
    width: var(--search-btn-w);
    flex-shrink: 0;
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

/* Dropdown search results: visually attached to input and limited to input width (not including button) */
.header__search-wrapper .search-dropdown {
    position: absolute;
    top: 100%;
    left: 0;
    /* width equals wrapper width minus the button width so it lines up with the input only */
    width: calc(100% - var(--search-btn-w));
    background: var(--color-bg); /* same as input */
    border: 1px solid var(--color-border);
    border-top: none; /* seamless union with input */
    border-radius: 0 0 6px 6px; /* bottom corners only */
    margin-top: 0; /* no gap */
    list-style: none;
    padding: 5px 0;
    max-height: 200px;
    overflow-y: auto;
    z-index: 1100;
}

/* If you prefer the dropdown aligned to the right edge of the input instead of the left,
   change left: 0; to right: var(--search-btn-w); and adjust as needed. */

.header__search-wrapper .search-dropdown li {
    padding: 8px 12px;
}

.header__search-wrapper .search-dropdown li a {
    text-decoration: none;
    color: var(--color-text);
    display: block;
}

.header__search-wrapper .search-dropdown li:hover {
    background: var(--color-primary);
    color: var(--color-bg);
}

/* Navigation Menu */
.header__nav-list {
    display: flex;
    gap: 30px;
    list-style: none;
    margin-left: 30px;
    padding: 0 20px;
    flex-shrink: 1;
    min-width: 0;
}

.nav__item {
    font-size: 1.1rem;
    cursor: pointer;
    transition: color 0.3s ease;
}

.nav__item:hover {
    color: var(--color-secondary);
}

.nav__item--active {
    text-decoration: underline;
}

.header__icon-container {
    margin-right: 10px;
    flex-shrink: 0; 
}

/* Hide hamburger on desktop */
.header__hamburger.btn {
    display: none;
}

.cart-badge {
    background-color: var(--color-accent);
    color:var(--color-bg);
    border-radius: 50%;
    padding: 2px 6px;
    font-size: 0.8rem;
    position: absolute;
    top: -8px;
    right: -8px;
}
  
.header__icon-container {
    position: relative; 
}

/* ===== Responsive adjustments ===== */
@media (max-width: 1200px) {
    .header__nav-list {
        gap: 20px;
    }
}

@media (max-width: 1024px) {
    .header__nav-list {
        gap: 10px;
    }
    .header__container > .header__search-bar {
        width: 250px;
    }
}

@media (max-width: 900px) {
    .header__container > .header__search-bar {
        width: 200px;
    }
}

/* ===== Mobile Styles ===== */
/* IMPORTANT: hide only the header's main search bar (direct child), not all .header__search-bar instances.
   This preserves the mobile overlay search inside .header__mobile-menu.
*/
@media (max-width: 840px) {
    .header__container > .header__search-bar,
    .header__nav-list {
        display: none;
    }

    .header__hamburger {
        display: block !important;
        font-size: 1.5rem;
        padding: 6px 12px;
        cursor: pointer;
    }

    .header__logo-icon {
        width: 35px;
        height: 35px;
    }

    .header__logo-text {
        font-size: 1.2rem;
    }
}

/* ===== Mobile Menu Overlay ===== */
.header__mobile-menu {
    position: fixed;
    top: 60px;
    left: 0;
    width: 100%;
    background-color: var(--color-primary);
    padding: 20px;
    display: flex;
    flex-direction: column;
    gap: 15px;
    z-index: 999; 
}

/* Keep mobile search layout but ensure search input looks correct inside overlay */
.header__mobile-menu .mobile-search {
    display: flex;
    gap: 10px;
}

/* This targets the search input inside the mobile overlay and preserves full rounding there */
.header__mobile-menu .header__search-input {
    margin: 0;
    border-radius: 6px;
    background: var(--color-bg);
    color: var(--color-text);
}

/* You can reduce the mobile overlay button width here if you want */
.header__mobile-menu .header__search-bar .btn {
    width: auto;
}

/* Mobile nav list (overlay) */
.mobile-nav-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 15px;
}

.mobile-nav-list .nav__item {
    font-size: 1.2rem;
    color: var(--color-bg);
    cursor: pointer;
}

.mobile-nav-list .nav__item:hover {
    color: var(--color-secondary);
}
